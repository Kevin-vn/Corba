package fr_upem_scheduler;


/**
* fr_upem_scheduler/SchedulerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from scheduler.idl
* mardi 13 mars 2018 14 h 11 CET
*/

public abstract class SchedulerPOA extends org.omg.PortableServer.Servant
 implements fr_upem_scheduler.SchedulerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("postRequest", new java.lang.Integer (0));
    _methods.put ("getRequest", new java.lang.Integer (1));
    _methods.put ("checkValues", new java.lang.Integer (2));
    _methods.put ("removeRequest", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // fr_upem_scheduler/Scheduler/postRequest
       {
         fr_upem_scheduler.Request r = fr_upem_scheduler.RequestHelper.read (in);
         boolean $result = false;
         $result = this.postRequest (r);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 1:  // fr_upem_scheduler/Scheduler/getRequest
       {
         short index = in.read_short ();
         fr_upem_scheduler.Request $result = null;
         $result = this.getRequest (index);
         out = $rh.createReply();
         fr_upem_scheduler.RequestHelper.write (out, $result);
         break;
       }

       case 2:  // fr_upem_scheduler/Scheduler/checkValues
       {
         try {
           fr_upem_scheduler.Request r = fr_upem_scheduler.RequestHelper.read (in);
           boolean $result = false;
           $result = this.checkValues (r);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (fr_upem_scheduler.unknown_values $ex) {
           out = $rh.createExceptionReply ();
           fr_upem_scheduler.unknown_valuesHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // fr_upem_scheduler/Scheduler/removeRequest
       {
         short index = in.read_short ();
         this.removeRequest (index);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:fr_upem_scheduler/Scheduler:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Scheduler _this() 
  {
    return SchedulerHelper.narrow(
    super._this_object());
  }

  public Scheduler _this(org.omg.CORBA.ORB orb) 
  {
    return SchedulerHelper.narrow(
    super._this_object(orb));
  }


} // class SchedulerPOA
